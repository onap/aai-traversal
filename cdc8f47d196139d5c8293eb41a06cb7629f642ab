{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "d12ece27_f607a42f",
        "filename": "aai-traversal/src/test/java/org/onap/aai/rest/search/GenericQueryProcessorTest.java",
        "patchSetId": 1
      },
      "lineNbr": 107,
      "author": {
        "id": 7849
      },
      "writtenOn": "2025-03-24T07:20:23Z",
      "side": 1,
      "message": "This test only deals with the \u0027if query shorter than dsl query end, return query\u0027 bit:\n```java\nString end \u003d \".cap(\u0027x\u0027).unfold().dedup()\";\nif (query.length() \u003c\u003d end.length()) {\n    return query;\n}\n```\nCan you add another test that tests `String dslQuery \u003d \"some dsl query.cap(\u0027x\u0027).unfold().dedup()\";`?\nI think the test method name should be adjusted then too, to something like `testAsTreeParameterWithDslQueryShorterThanQueryEnd` and `testAsTreeParameterWithDslQueryLongerThanQueryEnd` maybe",
      "revId": "cdc8f47d196139d5c8293eb41a06cb7629f642ab",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f676b96c_a91b4b8c",
        "filename": "aai-traversal/src/test/java/org/onap/aai/rest/search/GenericQueryProcessorTest.java",
        "patchSetId": 1
      },
      "lineNbr": 107,
      "author": {
        "id": 7849
      },
      "writtenOn": "2025-03-24T13:42:55Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "d12ece27_f607a42f",
      "revId": "cdc8f47d196139d5c8293eb41a06cb7629f642ab",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a0d0946e_e31a9fe7",
        "filename": "aai-traversal/src/test/java/org/onap/aai/rest/search/ModelAndNamedQueryRestProviderTest.java",
        "patchSetId": 1
      },
      "lineNbr": 202,
      "author": {
        "id": 7849
      },
      "writtenOn": "2025-03-24T07:43:25Z",
      "side": 1,
      "message": "Please don\u0027t assert what you are NOT expecting. That doesn\u0027t make any sense at all.\nRather assert here that you are expecting a `Response.Status.BAD_REQUEST.getStatusCode()` here and also the specific response body:\n```java\nassertEquals(Response.Status.BAD_REQUEST.getStatusCode(), response.getStatus());\nString expectedResponseEntity \u003d \"\"\"\n        {\"requestError\":{\"serviceException\":{\"messageId\":\"SVC3000\",\"text\":\"Invalid input performing %1 on %2 (msg\u003d%3) (ec\u003d%4)\",\"variables\":[\"POST Search\",\"getModelQueryResponse\",\"Required Field not passed.:Could not determine the top-node nodeType for this request. modelInfo: []\",\"ERR.5.4.6118\"]}}}\"\"\";\nassertEquals(expectedResponseEntity,response.getEntity());\n```",
      "revId": "cdc8f47d196139d5c8293eb41a06cb7629f642ab",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e26563b1_e2ccc598",
        "filename": "aai-traversal/src/test/java/org/onap/aai/rest/search/ModelAndNamedQueryRestProviderTest.java",
        "patchSetId": 1
      },
      "lineNbr": 202,
      "author": {
        "id": 7849
      },
      "writtenOn": "2025-03-24T13:42:55Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a0d0946e_e31a9fe7",
      "revId": "cdc8f47d196139d5c8293eb41a06cb7629f642ab",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "50c21795_22a71495",
        "filename": "aai-traversal/src/test/java/org/onap/aai/rest/search/ModelAndNamedQueryRestProviderTest.java",
        "patchSetId": 1
      },
      "lineNbr": 216,
      "author": {
        "id": 7849
      },
      "writtenOn": "2025-03-24T08:07:32Z",
      "side": 1,
      "message": "Please assert the response entity here.\nAlso your method is called ``...InvalidHeaders`, while what you are testing here is rather that `RuntimeExceptions` are caught and mapped to error responses.\n\nI would suggest that you either rename the test message to something like `testModelQueryRuntimeExceptionsAreCaught`, or if it is specifically about testing that the `xFromAppId` header may not be `null`, then adjust this testcase to `when(httpHeaders.getRequestHeader(\"X-FromAppId\")).thenReturn(null)` and assert the `AAIException` that is caught and mapped to some error response",
      "revId": "cdc8f47d196139d5c8293eb41a06cb7629f642ab",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "15ad25dd_169b839a",
        "filename": "aai-traversal/src/test/java/org/onap/aai/rest/search/ModelAndNamedQueryRestProviderTest.java",
        "patchSetId": 1
      },
      "lineNbr": 216,
      "author": {
        "id": 7849
      },
      "writtenOn": "2025-03-25T10:48:57Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "50c21795_22a71495",
      "revId": "cdc8f47d196139d5c8293eb41a06cb7629f642ab",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e1fdb3dc_beb77bbe",
        "filename": "aai-traversal/src/test/java/org/onap/aai/rest/search/ModelAndNamedQueryRestProviderTest.java",
        "patchSetId": 1
      },
      "lineNbr": 230,
      "author": {
        "id": 7849
      },
      "writtenOn": "2025-03-24T08:07:32Z",
      "side": 1,
      "message": "The assertion doesn\u0027t match the test name. I would suggest to change this to `assertEquals(...)` (instead of `assertNotEquals(...)`) and resolve the exception that would make it fail:\n```json\n{\n  \"requestError\": {\n    \"serviceException\": {\n      \"messageId\": \"SVC3000\",\n      \"text\": \"Invalid input performing %1 on %2 (msg\u003d%3) (ec\u003d%4)\",\n      \"variables\": [\n        \"POST Search\",\n        \"getModelQueryResponse\",\n        \"Required Field not passed.:Could not determine the top-node nodeType for this request. modelInfo: []\",\n        \"ERR.5.4.6118\"\n      ]\n    }\n  }\n}\n\n```",
      "revId": "cdc8f47d196139d5c8293eb41a06cb7629f642ab",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ed018f38_c1941990",
        "filename": "aai-traversal/src/test/java/org/onap/aai/rest/search/ModelAndNamedQueryRestProviderTest.java",
        "patchSetId": 1
      },
      "lineNbr": 230,
      "author": {
        "id": 7849
      },
      "writtenOn": "2025-03-25T10:48:57Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "e1fdb3dc_beb77bbe",
      "revId": "cdc8f47d196139d5c8293eb41a06cb7629f642ab",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8e08eab7_f1b42655",
        "filename": "aai-traversal/src/test/java/org/onap/aai/rest/search/ModelAndNamedQueryRestProviderTest.java",
        "patchSetId": 1
      },
      "lineNbr": 244,
      "author": {
        "id": 7849
      },
      "writtenOn": "2025-03-24T08:07:32Z",
      "side": 1,
      "message": "Please also assert the response entity",
      "revId": "cdc8f47d196139d5c8293eb41a06cb7629f642ab",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f26f8272_2faf4d14",
        "filename": "aai-traversal/src/test/java/org/onap/aai/rest/search/ModelAndNamedQueryRestProviderTest.java",
        "patchSetId": 1
      },
      "lineNbr": 244,
      "author": {
        "id": 7849
      },
      "writtenOn": "2025-03-24T13:42:55Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "8e08eab7_f1b42655",
      "revId": "cdc8f47d196139d5c8293eb41a06cb7629f642ab",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "580d68bd_cd9f0945",
        "filename": "aai-traversal/src/test/java/org/onap/aai/rest/search/ModelAndNamedQueryRestProviderTest.java",
        "patchSetId": 1
      },
      "lineNbr": 274,
      "author": {
        "id": 7849
      },
      "writtenOn": "2025-03-24T08:07:32Z",
      "side": 1,
      "message": "This variable is not used. Can you remove it?",
      "revId": "cdc8f47d196139d5c8293eb41a06cb7629f642ab",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "032765b3_5c0b7af4",
        "filename": "aai-traversal/src/test/java/org/onap/aai/rest/search/ModelAndNamedQueryRestProviderTest.java",
        "patchSetId": 1
      },
      "lineNbr": 274,
      "author": {
        "id": 7849
      },
      "writtenOn": "2025-03-24T13:42:55Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "580d68bd_cd9f0945",
      "revId": "cdc8f47d196139d5c8293eb41a06cb7629f642ab",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cdbbbb68_b969c0c0",
        "filename": "aai-traversal/src/test/java/org/onap/aai/rest/search/ModelAndNamedQueryRestProviderTest.java",
        "patchSetId": 1
      },
      "lineNbr": 281,
      "author": {
        "id": 7849
      },
      "writtenOn": "2025-03-24T08:07:32Z",
      "side": 1,
      "message": "PLease replace this with an `assertEquals` here that asserts the response entity",
      "revId": "cdc8f47d196139d5c8293eb41a06cb7629f642ab",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9cd24bf7_8e487f4e",
        "filename": "aai-traversal/src/test/java/org/onap/aai/rest/search/ModelAndNamedQueryRestProviderTest.java",
        "patchSetId": 1
      },
      "lineNbr": 281,
      "author": {
        "id": 7849
      },
      "writtenOn": "2025-03-24T13:45:39Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "cdbbbb68_b969c0c0",
      "revId": "cdc8f47d196139d5c8293eb41a06cb7629f642ab",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5db2faa3_d32dc7be",
        "filename": "aai-traversal/src/test/java/org/onap/aai/rest/search/ModelAndNamedQueryRestProviderTest.java",
        "patchSetId": 1
      },
      "lineNbr": 298,
      "author": {
        "id": 7849
      },
      "writtenOn": "2025-03-24T08:08:53Z",
      "side": 1,
      "message": "This variable is not used. Can you remove it?",
      "revId": "cdc8f47d196139d5c8293eb41a06cb7629f642ab",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e276649d_72240d6f",
        "filename": "aai-traversal/src/test/java/org/onap/aai/rest/search/ModelAndNamedQueryRestProviderTest.java",
        "patchSetId": 1
      },
      "lineNbr": 298,
      "author": {
        "id": 7849
      },
      "writtenOn": "2025-03-24T13:45:39Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "5db2faa3_d32dc7be",
      "revId": "cdc8f47d196139d5c8293eb41a06cb7629f642ab",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ebde9055_4ad49ab3",
        "filename": "aai-traversal/src/test/java/org/onap/aai/rest/search/ModelAndNamedQueryRestProviderTest.java",
        "patchSetId": 1
      },
      "lineNbr": 303,
      "author": {
        "id": 7849
      },
      "writtenOn": "2025-03-24T08:08:53Z",
      "side": 1,
      "message": "Please replace this with an `assertEquals` here that asserts the response entity",
      "revId": "cdc8f47d196139d5c8293eb41a06cb7629f642ab",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d1ca44f5_f1955a03",
        "filename": "aai-traversal/src/test/java/org/onap/aai/rest/search/ModelAndNamedQueryRestProviderTest.java",
        "patchSetId": 1
      },
      "lineNbr": 303,
      "author": {
        "id": 7849
      },
      "writtenOn": "2025-03-24T13:45:39Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "ebde9055_4ad49ab3",
      "revId": "cdc8f47d196139d5c8293eb41a06cb7629f642ab",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0f8dc7a7_9e534c03",
        "filename": "aai-traversal/src/test/java/org/onap/aai/rest/search/SchemaServiceCQConfigTest.java",
        "patchSetId": 1
      },
      "lineNbr": 51,
      "author": {
        "id": 7849
      },
      "writtenOn": "2025-03-24T08:41:01Z",
      "side": 1,
      "message": "The `@BeforeEach` block here is not needed. You are using `@ExtendWith(MockitoExtension.class)` to initialize the mocks, which is an alternative to `MockitoAnnotations.openMocks(this)`",
      "revId": "cdc8f47d196139d5c8293eb41a06cb7629f642ab",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a38da960_639d75fe",
        "filename": "aai-traversal/src/test/java/org/onap/aai/rest/search/SchemaServiceCQConfigTest.java",
        "patchSetId": 1
      },
      "lineNbr": 51,
      "author": {
        "id": 7849
      },
      "writtenOn": "2025-03-24T13:45:39Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "0f8dc7a7_9e534c03",
      "revId": "cdc8f47d196139d5c8293eb41a06cb7629f642ab",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e9ba050d_d60b3fe1",
        "filename": "aai-traversal/src/test/java/org/onap/aai/rest/search/SchemaServiceCQConfigTest.java",
        "patchSetId": 1
      },
      "lineNbr": 57,
      "author": {
        "id": 7849
      },
      "writtenOn": "2025-03-24T08:41:01Z",
      "side": 1,
      "message": "This test doesn\u0027t make sense to me at all. You are invoking `schemaServiceCQConfig.retrieveCustomQueries();` which will throw a `NullPointerException`. So `fail(...)` is never reached, right now. Then you are catching it and asserting `NotEquals` with some random message.\n\nIf you want to explicitly assert the `NullPointer` (even though I don\u0027t know how that relates to the `_EmptyResponse` in the test method), then do something like:\n```java\nNullPointerException exception \u003d assertThrows(NullPointerException.class, () -\u003e {\n    schemaServiceCQConfig.retrieveCustomQueries();\n});\n\nString expectedMessage \u003d \"...\";\nString actualMessage \u003d exception.getMessage();\n\nassertEquals(expectedMessage, actualMessage);\n```",
      "revId": "cdc8f47d196139d5c8293eb41a06cb7629f642ab",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5ad80834_fa576715",
        "filename": "aai-traversal/src/test/java/org/onap/aai/rest/search/SchemaServiceCQConfigTest.java",
        "patchSetId": 1
      },
      "lineNbr": 57,
      "author": {
        "id": 7849
      },
      "writtenOn": "2025-03-25T10:48:57Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "e9ba050d_d60b3fe1",
      "revId": "cdc8f47d196139d5c8293eb41a06cb7629f642ab",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "090a42d1_c00038e5",
        "filename": "aai-traversal/src/test/java/org/onap/aai/rest/search/SchemaServiceCQConfigTest.java",
        "patchSetId": 1
      },
      "lineNbr": 67,
      "author": {
        "id": 7849
      },
      "writtenOn": "2025-03-24T08:41:01Z",
      "side": 1,
      "message": "This test case is exactly the same as the one before",
      "revId": "cdc8f47d196139d5c8293eb41a06cb7629f642ab",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "66dad29c_80bcbe34",
        "filename": "aai-traversal/src/test/java/org/onap/aai/rest/search/SchemaServiceCQConfigTest.java",
        "patchSetId": 1
      },
      "lineNbr": 67,
      "author": {
        "id": 7849
      },
      "writtenOn": "2025-03-25T10:48:57Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "090a42d1_c00038e5",
      "revId": "cdc8f47d196139d5c8293eb41a06cb7629f642ab",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "38253733_65d2ca16",
        "filename": "aai-traversal/src/test/java/org/onap/aai/rest/search/SchemaServiceCQConfigTest.java",
        "patchSetId": 1
      },
      "lineNbr": 78,
      "author": {
        "id": 7849
      },
      "writtenOn": "2025-03-24T08:41:01Z",
      "side": 1,
      "message": "Since we are on Java 17, we can use [text blocks](https://www.baeldung.com/java-text-blocks) here, which would be a bit nicer to read",
      "revId": "cdc8f47d196139d5c8293eb41a06cb7629f642ab",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b0eb386a_1596174e",
        "filename": "aai-traversal/src/test/java/org/onap/aai/rest/search/SchemaServiceCQConfigTest.java",
        "patchSetId": 1
      },
      "lineNbr": 78,
      "author": {
        "id": 7849
      },
      "writtenOn": "2025-03-25T10:48:57Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "38253733_65d2ca16",
      "revId": "cdc8f47d196139d5c8293eb41a06cb7629f642ab",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "68e97495_672be1c3",
        "filename": "aai-traversal/src/test/java/org/onap/aai/rest/search/SchemaServiceCQConfigTest.java",
        "patchSetId": 1
      },
      "lineNbr": 80,
      "author": {
        "id": 7849
      },
      "writtenOn": "2025-03-24T08:41:01Z",
      "side": 1,
      "message": "Please remove this mock here. It is not involved in the logic you are testing here",
      "revId": "cdc8f47d196139d5c8293eb41a06cb7629f642ab",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b9169f06_27854cf6",
        "filename": "aai-traversal/src/test/java/org/onap/aai/rest/search/SchemaServiceCQConfigTest.java",
        "patchSetId": 1
      },
      "lineNbr": 84,
      "author": {
        "id": 7849
      },
      "writtenOn": "2025-03-24T09:01:54Z",
      "side": 1,
      "message": "Please add assertions for `result` to make sure it is\n- successful\n- it has a certain value",
      "revId": "cdc8f47d196139d5c8293eb41a06cb7629f642ab",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "70983dcb_60252ad7",
        "filename": "aai-traversal/src/test/java/org/onap/aai/rest/search/SchemaServiceCQConfigTest.java",
        "patchSetId": 1
      },
      "lineNbr": 84,
      "author": {
        "id": 7849
      },
      "writtenOn": "2025-03-25T10:48:57Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "b9169f06_27854cf6",
      "revId": "cdc8f47d196139d5c8293eb41a06cb7629f642ab",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c351a09d_8c16a57c",
        "filename": "aai-traversal/src/test/java/org/onap/aai/rest/search/SearchProviderTest.java",
        "patchSetId": 1
      },
      "lineNbr": 233,
      "author": {
        "id": 7849
      },
      "writtenOn": "2025-03-24T09:24:39Z",
      "side": 1,
      "message": "This variable is not used, please remove it",
      "revId": "cdc8f47d196139d5c8293eb41a06cb7629f642ab",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b75e2ba6_dcea953e",
        "filename": "aai-traversal/src/test/java/org/onap/aai/rest/search/SearchProviderTest.java",
        "patchSetId": 1
      },
      "lineNbr": 233,
      "author": {
        "id": 7849
      },
      "writtenOn": "2025-03-25T10:48:57Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "c351a09d_8c16a57c",
      "revId": "cdc8f47d196139d5c8293eb41a06cb7629f642ab",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a4b278ec_82361128",
        "filename": "aai-traversal/src/test/java/org/onap/aai/rest/search/SearchProviderTest.java",
        "patchSetId": 1
      },
      "lineNbr": 238,
      "author": {
        "id": 7849
      },
      "writtenOn": "2025-03-24T09:24:39Z",
      "side": 1,
      "message": "The same comment as with the other test that is asserting `500` for missing headers.\nPlease assert the response body here too. Also your test method naming indicates that you want to test the aai exception catching.\nYour method body asserts based on the RuntimeException, which is the other catch-all in the code",
      "revId": "cdc8f47d196139d5c8293eb41a06cb7629f642ab",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5ae43f61_491b33c9",
        "filename": "aai-traversal/src/test/java/org/onap/aai/rest/search/SearchProviderTest.java",
        "patchSetId": 1
      },
      "lineNbr": 238,
      "author": {
        "id": 7849
      },
      "writtenOn": "2025-03-25T10:48:57Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a4b278ec_82361128",
      "revId": "cdc8f47d196139d5c8293eb41a06cb7629f642ab",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0d1a7ffb_0d49b17c",
        "filename": "aai-traversal/src/test/java/org/onap/aai/rest/search/SearchProviderTest.java",
        "patchSetId": 1
      },
      "lineNbr": 248,
      "author": {
        "id": 7849
      },
      "writtenOn": "2025-03-24T09:24:39Z",
      "side": 1,
      "message": "Please assert the response body here",
      "revId": "cdc8f47d196139d5c8293eb41a06cb7629f642ab",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "df6b361a_9fcd01bc",
        "filename": "aai-traversal/src/test/java/org/onap/aai/rest/search/SearchProviderTest.java",
        "patchSetId": 1
      },
      "lineNbr": 248,
      "author": {
        "id": 7849
      },
      "writtenOn": "2025-03-25T10:48:57Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "0d1a7ffb_0d49b17c",
      "revId": "cdc8f47d196139d5c8293eb41a06cb7629f642ab",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "06ee8c3e_4832f995",
        "filename": "aai-traversal/src/test/java/org/onap/aai/rest/search/SearchProviderTest.java",
        "patchSetId": 1
      },
      "lineNbr": 254,
      "author": {
        "id": 7849
      },
      "writtenOn": "2025-03-24T09:24:39Z",
      "side": 1,
      "message": "The `aaiException` field is not used here, please remove it",
      "revId": "cdc8f47d196139d5c8293eb41a06cb7629f642ab",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ad36033c_cab600dc",
        "filename": "aai-traversal/src/test/java/org/onap/aai/rest/search/SearchProviderTest.java",
        "patchSetId": 1
      },
      "lineNbr": 254,
      "author": {
        "id": 7849
      },
      "writtenOn": "2025-03-24T13:45:39Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "06ee8c3e_4832f995",
      "revId": "cdc8f47d196139d5c8293eb41a06cb7629f642ab",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9d5b88ae_6a0ffeea",
        "filename": "aai-traversal/src/test/java/org/onap/aai/rest/search/SearchProviderTest.java",
        "patchSetId": 1
      },
      "lineNbr": 259,
      "author": {
        "id": 7849
      },
      "writtenOn": "2025-03-24T09:24:39Z",
      "side": 1,
      "message": "Please assert the response body here",
      "revId": "cdc8f47d196139d5c8293eb41a06cb7629f642ab",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "72224260_e07c793f",
        "filename": "aai-traversal/src/test/java/org/onap/aai/rest/search/SearchProviderTest.java",
        "patchSetId": 1
      },
      "lineNbr": 259,
      "author": {
        "id": 7849
      },
      "writtenOn": "2025-03-24T13:45:39Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "9d5b88ae_6a0ffeea",
      "revId": "cdc8f47d196139d5c8293eb41a06cb7629f642ab",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "510a3484_e87f0f60",
        "filename": "aai-traversal/src/test/java/org/onap/aai/rest/search/SearchProviderTest.java",
        "patchSetId": 1
      },
      "lineNbr": 269,
      "author": {
        "id": 7849
      },
      "writtenOn": "2025-03-24T09:24:39Z",
      "side": 1,
      "message": "Please assert the response body here",
      "revId": "cdc8f47d196139d5c8293eb41a06cb7629f642ab",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9ca690f2_a8a23038",
        "filename": "aai-traversal/src/test/java/org/onap/aai/rest/search/SearchProviderTest.java",
        "patchSetId": 1
      },
      "lineNbr": 269,
      "author": {
        "id": 7849
      },
      "writtenOn": "2025-03-24T13:45:39Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "510a3484_e87f0f60",
      "revId": "cdc8f47d196139d5c8293eb41a06cb7629f642ab",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a"
    }
  ]
}