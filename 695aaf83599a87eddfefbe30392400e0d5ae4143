{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "1fd226a4_8d57a7b8",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 7849
      },
      "writtenOn": "2025-01-09T13:20:30Z",
      "side": 1,
      "message": "General question: Do I have to review through 5000 lines of chatgpt?",
      "revId": "695aaf83599a87eddfefbe30392400e0d5ae4143",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "43b7d0b2_c45001bd",
        "filename": "aai-traversal/src/test/java/org/onap/aai/config/PropertyPasswordConfigurationTest.java",
        "patchSetId": 2
      },
      "lineNbr": 5,
      "author": {
        "id": 7849
      },
      "writtenOn": "2025-01-09T12:44:53Z",
      "side": 1,
      "message": "For all the tests that are newly added with this change, we would need the copyright for 2025 now",
      "revId": "695aaf83599a87eddfefbe30392400e0d5ae4143",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "213e408f_c0c4925c",
        "filename": "aai-traversal/src/test/java/org/onap/aai/dbgraphmap/SearchGraphTest.java",
        "patchSetId": 2
      },
      "lineNbr": 333,
      "author": {
        "id": 7849
      },
      "writtenOn": "2025-01-09T13:19:27Z",
      "side": 1,
      "message": "It\u0027s good that we are now asserting that a response is returned. We should also assert the response body though. Otherwise, this may as well be returning an error response for all we know",
      "revId": "695aaf83599a87eddfefbe30392400e0d5ae4143",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e456f19d_20ebf32e",
        "filename": "aai-traversal/src/test/java/org/onap/aai/interceptors/post/InvalidResponseStatusTest.java",
        "patchSetId": 2
      },
      "lineNbr": 102,
      "author": {
        "id": 7849
      },
      "writtenOn": "2025-01-09T13:19:27Z",
      "side": 1,
      "message": "This test is the same test as `testFilter_ResponseStatus405_ShouldChangeTo400` and it\u0027s not in fact asserting that an xml content-type is set.",
      "revId": "695aaf83599a87eddfefbe30392400e0d5ae4143",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ddbf9330_8599dd6c",
        "filename": "aai-traversal/src/test/java/org/onap/aai/interceptors/post/InvalidResponseStatusTest.java",
        "patchSetId": 2
      },
      "lineNbr": 115,
      "author": {
        "id": 7849
      },
      "writtenOn": "2025-01-09T13:19:27Z",
      "side": 1,
      "message": "This test is not asserting that the entity is in json format",
      "revId": "695aaf83599a87eddfefbe30392400e0d5ae4143",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "922ef80b_3575789d",
        "filename": "aai-traversal/src/test/java/org/onap/aai/interceptors/post/ResponseHeaderManipulationTest.java",
        "patchSetId": 2
      },
      "lineNbr": 72,
      "author": {
        "id": 7849
      },
      "writtenOn": "2025-01-09T13:19:27Z",
      "side": 1,
      "message": "You are asserting here that `String !\u003d List\u003cString\u003e` and the `responseHeaderManipulation` is not involved here. This test doesn\u0027t make sense from my perspective. Would should only have positive assertions here of this kind.",
      "revId": "695aaf83599a87eddfefbe30392400e0d5ae4143",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "37c1836c_6231096a",
        "filename": "aai-traversal/src/test/java/org/onap/aai/interceptors/post/ResponseHeaderManipulationTest.java",
        "patchSetId": 2
      },
      "lineNbr": 87,
      "author": {
        "id": 7849
      },
      "writtenOn": "2025-01-09T13:19:27Z",
      "side": 1,
      "message": "Same here",
      "revId": "695aaf83599a87eddfefbe30392400e0d5ae4143",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bd61aef9_6e615c71",
        "filename": "aai-traversal/src/test/java/org/onap/aai/interceptors/post/ResponseHeaderManipulationTest.java",
        "patchSetId": 2
      },
      "lineNbr": 101,
      "author": {
        "id": 7849
      },
      "writtenOn": "2025-01-09T13:19:27Z",
      "side": 1,
      "message": "same here",
      "revId": "695aaf83599a87eddfefbe30392400e0d5ae4143",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6bbb3c4c_f6be385c",
        "filename": "aai-traversal/src/test/java/org/onap/aai/interceptors/post/ResponseHeaderManipulationTest.java",
        "patchSetId": 2
      },
      "lineNbr": 129,
      "author": {
        "id": 7849
      },
      "writtenOn": "2025-01-09T13:19:27Z",
      "side": 1,
      "message": "Why are you asserting that mockResponseHeaders.get(\"Content-Type\")) does not have some value, when your are already asserting that mockResponseHeaders does not contain a `Content-Type` in the line before?",
      "revId": "695aaf83599a87eddfefbe30392400e0d5ae4143",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6ee6f5dd_ac09bf93",
        "filename": "aai-traversal/src/test/java/org/onap/aai/interceptors/post/ResponseHeaderManipulationTest.java",
        "patchSetId": 2
      },
      "lineNbr": 143,
      "author": {
        "id": 7849
      },
      "writtenOn": "2025-01-09T13:19:27Z",
      "side": 1,
      "message": "Same here",
      "revId": "695aaf83599a87eddfefbe30392400e0d5ae4143",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "24c75729_7f4de9b9",
        "filename": "aai-traversal/src/test/java/org/onap/aai/interceptors/post/ResponseHeaderManipulationTest.java",
        "patchSetId": 2
      },
      "lineNbr": 157,
      "author": {
        "id": 7849
      },
      "writtenOn": "2025-01-09T13:19:27Z",
      "side": 1,
      "message": "Same here",
      "revId": "695aaf83599a87eddfefbe30392400e0d5ae4143",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3f11377e_47029840",
        "filename": "aai-traversal/src/test/java/org/onap/aai/interceptors/pre/HeaderValidationTest.java",
        "patchSetId": 2
      },
      "lineNbr": 52,
      "author": {
        "id": 7849
      },
      "writtenOn": "2025-01-09T13:41:10Z",
      "side": 1,
      "message": "@ExtendWith is not needed here. @SpringBootTest already includes that",
      "revId": "695aaf83599a87eddfefbe30392400e0d5ae4143",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d35883de_d28c36f1",
        "filename": "aai-traversal/src/test/java/org/onap/aai/interceptors/pre/HeaderValidationTest.java",
        "patchSetId": 2
      },
      "lineNbr": 57,
      "author": {
        "id": 7849
      },
      "writtenOn": "2025-01-09T13:41:10Z",
      "side": 1,
      "message": "This is a strange notation, please just use `@TestConfiguration` instead of `@Configuration` on your static inner `TestConfig` class here",
      "revId": "695aaf83599a87eddfefbe30392400e0d5ae4143",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b3b00e6a_07a8e966",
        "filename": "aai-traversal/src/test/java/org/onap/aai/interceptors/pre/HeaderValidationTest.java",
        "patchSetId": 2
      },
      "lineNbr": 74,
      "author": {
        "id": 7849
      },
      "writtenOn": "2025-01-09T13:41:10Z",
      "side": 1,
      "message": "This line is declared is twice. Also you don\u0027t need to initialize this explicitly when you are actually dependency injecting it here using `@InjectMocks`",
      "revId": "695aaf83599a87eddfefbe30392400e0d5ae4143",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7232dfb0_22b816e8",
        "filename": "aai-traversal/src/test/java/org/onap/aai/interceptors/pre/HeaderValidationTest.java",
        "patchSetId": 2
      },
      "lineNbr": 83,
      "author": {
        "id": 7849
      },
      "writtenOn": "2025-01-09T13:41:10Z",
      "side": 1,
      "message": "This line cannot do anything because there exists no `FROM_APP_ID` header. Chatgpt likely translated the reference to `AAIHeaderProperties.FROM_APP_ID` in the `HeaderValidation.getPartnerName()` method to `FROM_APP_ID` while the header is actually named `X-FromAppId`.",
      "revId": "695aaf83599a87eddfefbe30392400e0d5ae4143",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8917c104_b6ba107c",
        "filename": "aai-traversal/src/test/java/org/onap/aai/interceptors/pre/HeaderValidationTest.java",
        "patchSetId": 2
      },
      "lineNbr": 89,
      "author": {
        "id": 7849
      },
      "writtenOn": "2025-01-09T13:41:10Z",
      "side": 1,
      "message": "The assertion doesn\u0027t fit to your comment. You are only asserting right now, that your mocking isn\u0027t working because `when(requestContext.getHeaderString(\"X-ONAP-PartnerName\")).thenReturn(\"\");` isn\u0027t working and is actually returning `null` instead of `\"\"`.\nWould this line work and the FROM_APP_ID one, then the assertion should be `assertEquals(\"testAppId\", partnerName)`",
      "revId": "695aaf83599a87eddfefbe30392400e0d5ae4143",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a"
    }
  ]
}