# The following info parameters are being referenced by ajsc6
info.build.artifact=aai-traversal
info.build.name=traversal
info.build.description=Traversal Microservice
info.build.version=1.1.0

spring.application.name=aai-traversal
spring.jersey.type=filter
spring.main.allow-bean-definition-overriding=true

spring.zipkin.baseUrl=http://jaeger-collector.istio-system:9411
spring.sleuth.trace-id128=true
spring.sleuth.sampler.probability=1.0
spring.sleuth.propagation.type=w3c,b3
spring.sleuth.supports-join=false
spring.sleuth.web.skip-pattern=/aai/util.*

server.servlet.context-path=${schema.uri.base.path}
spring.autoconfigure.exclude=\
  org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration,\
  org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration,\
  org.springframework.boot.autoconfigure.security.servlet.SecurityAutoConfiguration, \
  org.springframework.boot.actuate.autoconfigure.security.servlet.ManagementWebSecurityAutoConfiguration

spring.jersey.application-path=/

#The max number of active threads in this pool
jetty.threadPool.maxThreads=200
#The minimum number of threads always kept alive
jetty.threadPool.minThreads=8
#The number of milliseconds before an idle thread shutsdown, unless the number of active threads are less or equal to minSpareThreads
server.tomcat.max-idle-time=60000

# If you get an application startup failure that the port is already taken
# If thats not it, please check if the key-store file path makes sense
server.local.startpath=aai-traversal/src/main/resources
server.basic.auth.location=${server.local.startpath}/etc/auth/realm.properties

server.port=8446

# Start of Internal Specific Properties
# Switch to one-way-ssl
spring.profiles.active=production,one-way-ssl

schema.version.list=v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29,v30
# Specifies which component should the oxm be looking at
schema.source.name=onap
# End of Internal Specific Properties

# dmaap is deprecated and now replaced with kafka
spring.kafka.producer.bootstrap-servers=${BOOTSTRAP_SERVERS}
spring.kafka.producer.properties.security.protocol=SASL_PLAINTEXT
spring.kafka.producer.properties.sasl.mechanism=SCRAM-SHA-512
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.properties.sasl.jaas.config = ${JAAS_CONFIG}
spring.kafka.producer.retries=3

# Schema related attributes for the oxm and edges
# Any additional schema related attributes should start with prefix schema

schema.configuration.location=N/A
# Location of where the oxm files are
schema.nodes.location=${server.local.startpath}/schema/${schema.source.name}/oxm/
# Location of where the dbedgerules files are
schema.edges.location=${server.local.startpath}/schema/${schema.source.name}/dbedgerules/
# Location of where the stored queries are
schema.queries.location=${server.local.startpath}/schema/${schema.source.name}/query/

schema.ingest.file=${server.local.startpath}/application.properties

# Schema Version Related Attributes
schema.uri.base.path=/aai
# Specifies from which version should the depth parameter to default to zero
schema.version.depth.start=v10
# Specifies from which version should the related link be displayed in response payload
schema.version.related.link.start=v10
# Specifies from which version should the client see only the uri excluding host info
# Before this version server base will also be included
schema.version.app.root.start=v11
# Specifies from which version should the namespace be changed
schema.version.namespace.change.start=v12
# Specifies from which version should the client start seeing the edge label in payload
schema.version.edge.label.start=v12
# Specifies the version that the application should default to
schema.version.api.default=v30

schema.translator.list=config
schema.service.base.url=https://localhost:8452/aai/schema-service/v1/
schema.service.nodes.endpoint=nodes?version=
schema.service.edges.endpoint=edgerules?version=
schema.service.versions.endpoint=versions
schema.service.custom.queries.endpoint=stored-queries

schema.service.versions.override=false

history.enabled=false;
history.truncate.window.days=365

#To Expose the Prometheus scraping endpoint
management.server.port=8448
#To Enable Actuator Endpoint, you can override this to True in OOM charts
management.endpoints.enabled-by-default=true
#To Enable Actuator Endpoint, you can override this in OOM Charts
management.endpoints.web.exposure.include=info, health, prometheus
management.metrics.web.server.request.autotime.enabled=false
management.metrics.tags.group_id=aai
management.info.env.enabled=true
# management.metrics.tags.app_id=${info.build.artifact}
#Enable this option only for debug purposes. For more information: https://github.com/micrometer-metrics/micrometer/issues/1584
scrape.uri.metrics=true


# If true, the actuator health check will be overriden
# to use the AaiGraphChecker check instead
# this does the same as the /echo endpoint,
# but doesn't show up in micrometer metrics
aai.actuator.echo.enabled=false

BOOTSTRAP_SERVERS=localhost:9092
JAAS_CONFIG=""
aai.notifications.enabled=false
aai.graph.properties.path=${server.local.startpath}/etc/appprops/janusgraph-realtime.properties

aai.basic-auth.enabled=true
aai.basic-auth.users[0].username=AAI
aai.basic-auth.users[0].password=AAI

aai.request.encodingvalidation.enabled=${ENCODING_VALIDATION:false}
